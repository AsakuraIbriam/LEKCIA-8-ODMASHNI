#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>




#define COUNT 3

    void bubbleSort(void *, size_t , size_t, int (*)(const void * , const void *), void (*)(void *, void *, size_t));
    void swap (void *, void *, size_t);
    int compareFloats(const void *, const void *);
    int compareAsc(const void *, const void *);
    int compareDesc(const void *, const void *);
    int compareInts(const void *, const void *);



typedef struct {
    char title[150];
    char author[100];
    int pages;
    float price;
}Book;

int main()
{
        srand(time(NULL));
        Book books[COUNT];

        const char names[][10] = {"Djodji Bodji", "Dodo Bodo", "Momo Mani", "Dudi Frudi",
                                "Fifi Jifi", "Susi Pussi", "Poki Doki", "Djidji Bidji", "Loko Doko", "Bebi Debi"};
        const char titles[][10] = {
            "Cloudy with a Chance of Meatballs by Judi Barrett",
            "Pride and Prejudice and Zombies by Seth Grahame-Smith",
            "The House of Mirth by Edith Wharton",
            "Are You There, Vodka?",
            "And Then There Were None by Agatha Christie",
            "Their Eyes Were Watching God by Zora Neale Hurston",
            "The Devil Wears Prada by Lauren Weisberger",
            "Brave New World by Aldous Huxley",
            "Bury My Heart at Wounded Knee by Dee Brown",
            "The Man Who Was Thursday"
        };

        const int pages[10] ={300, 200, 500, 870, 1354, 1982, 1123, 565, 837, 1553};
        const float price[10] = {6.53, 85.34, 99.80, 230.1, 694, 995, 877, 112, 450, 999.99};

        for(int i = 0; i < COUNT; i++) {
            strcpy(books[i].author, names[rand()%10]);
            strcpy(books[i].title, titles[rand()%10]);
            books[i].pages = pages[rand()%10];
            books[i].price = price[rand()%10];
        }

        size_t elementsN = COUNT;
        size_t singleElementsSize = sizeof(Book);

        int (*fsp[4])(const void *, const void *) = {compareAsc, compareDesc, compareInts, compareFloats};
        void (*swp)(void * s1, void * s2, size_t p);
        swp = swap;

        for(int i = 0; i < 4; i++) {

            bubbleSort(books, elementsN, singleElementsSize, fsp[i], swap);

            if(i == 0) {
                    printf("\t\t----Compared by title Ascending:----\t\t\n");
                    for(int j = 0; j < COUNT; j++){
                    printf("%d. %s\n",j+1, books[j].title);
                    }
            }   else if(i == 1) {
                   printf("\t\t----Compared by author name Descending:----\t\t\\n");
                    for(int j = 0; j < COUNT; j++) {
                    printf("%d. %s\n",j+1, books[j].author);
                    }
            } else if (i == 2){
                        printf("\t\t-----Compared by Pages:\t\t\n");
                     for(int j = 0; j < COUNT; j++) {
                    printf("%d. %d\n",j+1, books[j].pages);
                    }
                }  else {
                    printf("\t\t-----Compared by author price:\t\t\n");
                    for(int j = 0; j < COUNT; j++) {
                    printf("%d. %f\n",j+1, books[j].price);
                    }
                    }
                    printf("\n\n\n");
                }






 return 0;
}




void bubbleSort(void *arr, size_t elementsNumber, size_t singleElement, int (*comparator)(const void * p1, const void * p2), void (*swap)(void * s1, void * s2, size_t n)) {
    for(int i = 0; i < elementsNumber - 1; i++) {

        for(int j = 0; j < (elementsNumber - i - 1)*singleElement; j+=singleElement) {

                if(comparator((arr + j), (arr + j + singleElement)) > 0){
                        swap((arr + j), (arr + j + singleElement), singleElement);
               }
        }
    }
}



void swap (void * p1, void * p2, size_t size) {
    uint8_t arr[size];
    memcpy(arr, p1, size);
    memcpy(p1, p2, size);
    memcpy(p2, arr, size);
}
int compareFloats(const void * p1, const void * p2) {
    Book *d1 = (Book *)p1;
    Book *d2 = (Book *)p2;
    if(fabs(d1->price - d2->price) < 0.001) {
        return 0;
    } else if(d1->price > d2->price) {
        return 1;
    } else {
        return -1;
    }
}
int compareAsc(const void * p1, const void * p2) {
    Book *d1 = (Book*)p1;
    Book *d2 = (Book*)p2;
    char c1 = d1->title[0];
    char c2 = d2->title[0];
    if(c1 == c2) {
        return 0;
    } else if(c1 > c2) {
        return 1;
    } else {
        return -1;
    }

}
int compareDesc(const void * p1, const void * p2){
        Book *d1 = (Book*)p1;
        Book *d2 = (Book*)p2;
        char c1 = d1->author[0];
        char c2 = d2->author[0];
        if(c1 == c2) {
            return 0;
        } else if(c1 > c2) {
            return -1;
        } else {
            return 1;
        }
}

int compareInts(const void * p1, const void * p2){
    Book *d1 = (Book*)p1;
    Book *d2 = (Book*)p2;
    return d1->pages > d2->pages;
}


